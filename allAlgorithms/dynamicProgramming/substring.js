// алгортим поиска максимальной длины подстроки в строке - преффикс в начале строки и суффикс в конце строки. найти максимальную их длину с равными символами.
function substring(a) {
    if (a.length <= 1) {
        return 0;
    }

    // массив максимальных длин подстрок, изначально заполнен нулями.
    let pi = Array.from({length: a.length}).fill(0);

    // запускаем цикл по строке
    for (let i = 1; i < a.length; i++) {

        // создаём переменную которая будет до элемента с индексом i в строке
        let p = pi[i - 1];


        while (a[i] !== a[p]) {
            // если у нас при не равных символах и p = 0, то i повышаем на 1 просто выходя из цикла
            if (p === 0) {
                break;
            } else {
                // если же p != 0, но становится равным значением в массиве pi по индексу p - 1;
                p = pi[p - 1];
            }
        }
        if (a[i] === a[p]) {
            // если элементы равны, то прибавляем 1 в массив pi по текущему индексу и делаем p++, i++
            pi[i] = p + 1;
            p += 1;
        }
    }
    return pi;
}

console.log(substring('abcabcd'));
